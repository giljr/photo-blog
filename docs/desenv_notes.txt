===============================================================================
rails g devise:install
      create  config/initializers/devise.rb
      create  config/locales/devise.en.yml
===============================================================================

Depending on your application's configuration some manual setup may be required:

  1. Ensure you have defined default url options in your environments files. Here
     is an example of default_url_options appropriate for a development environment
     in config/environments/development.rb:

       config.action_mailer.default_url_options = { host: 'localhost', port: 3000 }

     In production, :host should be set to the actual host of your application.

     * Required for all applications. *

  2. Ensure you have defined root_url to *something* in your config/routes.rb.
     For example:

       root to: "home#index"
     
     * Not required for API-only Applications *

  3. Ensure you have flash messages in app/views/layouts/application.html.erb.
     For example:

       <p class="notice"><%= notice %></p>
       <p class="alert"><%= alert %></p>

     * Not required for API-only Applications *

  4. You can copy Devise views (for customization) to your app by running:

       rails g devise:views
       
     * Not required *

===============================================================================
rails g devise User
      invoke  active_record
      create    db/migrate/20230618194515_devise_create_users.rb
      create    app/models/user.rb
      invoke    test_unit
      create      test/models/user_test.rb
      create      test/fixtures/users.yml
      insert    app/models/user.rb
       route  devise_for :users
===============================================================================
rails db:migrate
== 20230618194515 DeviseCreateUsers: migrating ================================
-- create_table(:users)
   -> 0.0012s
-- add_index(:users, :email, {:unique=>true})
   -> 0.0006s
-- add_index(:users, :reset_password_token, {:unique=>true})
   -> 0.0006s
== 20230618194515 DeviseCreateUsers: migrated (0.0025s) =======================

===============================================================================
rails g devise:views:locale en
===============================================================================
ADD HEROKU MAILING FUNCTIONALITY - TWILIO SENDGRID

https://docs.sendgrid.com/for-developers/sending-email/rubyonrails
https://elements.heroku.com/addons/sendgrid
https://app.sendgrid.com/settings/api_keys

===============================================================================
j3@JAYTHREE:~/Documents/ror/heroku/photo-blog-app$ heroku addons:create sendgrid:starter
Creating sendgrid:starter on â¬¢ j3-photo-blog-app... free
Your add-on is being provisioned. It will be available shortly.
sendgrid-reticulated-39819 is being created in the background. The app will restart when complete...
Use heroku addons:info sendgrid-reticulated-39819 to check creation progress
Use heroku addons:docs sendgrid to view documentation
j3@JAYTHREE:~/Documents/ror/heroku/photo-blog-app$ 

heroku config:set SENDGRID_USERNAME=apikey
heroku config:set SENDGRID_PASSWORD=SG.****

===============================================================================
GO TO UBUNTU - BASH:

nano /home/j3/bashrc
export SENDGRID_USERNAME= "apikey"
export SENDGRID_PASSWORD="SG.***"  
===============================================================================
GO TO config/environment.rb:

ActionMailer::Base.smtp_settings = {
    :user_name => ENV['SENDGRID_USERNAME'], # This is the string literal 'apikey', NOT the ID of your API key
    :password => ENV['SENDGRID_PASSWORD'], # This is the secret sendgrid API key which was issued during API key creation
    :domain => 'heroku.com',
    :address => 'smtp.sendgrid.net',
    :port => 587,
    :authentication => :plain,
    :enable_starttls_auto => true
  }
===============================================================================
GO TO config/development.rb

  # Set MALIER with Twilio SendGrid
  config.action_mailer.delivery_method = :test
  config.action_mailer.default_url_options = { :host => 'http://localhost:3000'}

===============================================================================
GO TO config/production.rb

# Set MALIER with Twilio SendGrid
  config.action_mailer.delivery_method = :smtp
  config.action_mailer.default_url_options = { :host => 'j3-photo-blog-app-1b7089b46bb7.herokuapp.com', :protocol => 'https'}
===============================================================================
GO TO: localhost:3000/users/sign_up

Started GET "/users/sign_up" for 127.0.0.1 at 2023-06-21 12:46:51 -0400
Processing by Devise::RegistrationsController#new as HTML
  Rendering layout layouts/application.html.erb
  Rendering devise/registrations/new.html.erb within layouts/application
  Rendered devise/shared/_links.html.erb (Duration: 2.0ms | Allocations: 1097)
  Rendered devise/registrations/new.html.erb within layouts/application (Duration: 13.1ms | Allocations: 7706)
  Rendered layouts/_navigation.html.erb (Duration: 0.0ms | Allocations: 9)
  Rendered layout layouts/application.html.erb (Duration: 14.4ms | Allocations: 8218)
Completed 200 OK in 62ms (Views: 16.7ms | ActiveRecord: 0.6ms | Allocations: 29736)


Started POST "/users" for 127.0.0.1 at 2023-06-21 12:47:14 -0400
Processing by Devise::RegistrationsController#create as TURBO_STREAM
  Parameters: {"authenticity_token"=>"[FILTERED]", "user"=>{"email"=>"giljr.2009@gmail.com", "password"=>"[FILTERED]", "password_confirmation"=>"[FILTERED]"}, "commit"=>"Sign up"}
  TRANSACTION (0.0ms)  begin transaction
  User Exists? (0.1ms)  SELECT 1 AS one FROM "users" WHERE "users"."email" = ? LIMIT ?  [["email", "giljr.2009@gmail.com"], ["LIMIT", 1]]
  TRANSACTION (0.0ms)  rollback transaction
  Rendering layout layouts/application.html.erb
  Rendering devise/registrations/new.html.erb within layouts/application
  Rendered devise/shared/_links.html.erb (Duration: 0.3ms | Allocations: 187)
  Rendered devise/registrations/new.html.erb within layouts/application (Duration: 2.2ms | Allocations: 2306)
  Rendered layouts/_navigation.html.erb (Duration: 0.0ms | Allocations: 9)
  Rendered layout layouts/application.html.erb (Duration: 2.9ms | Allocations: 2799)
Completed 422 Unprocessable Entity in 208ms (Views: 3.3ms | ActiveRecord: 0.2ms | Allocations: 12930)


Started GET "/users/confirmation/new" for 127.0.0.1 at 2023-06-21 12:47:22 -0400
Processing by Devise::ConfirmationsController#new as HTML
  Rendering layout layouts/application.html.erb
  Rendering devise/confirmations/new.html.erb within layouts/application
  Rendered devise/shared/_links.html.erb (Duration: 1.1ms | Allocations: 581)
  Rendered devise/confirmations/new.html.erb within layouts/application (Duration: 5.5ms | Allocations: 2177)
  Rendered layouts/_navigation.html.erb (Duration: 0.0ms | Allocations: 9)
  Rendered layout layouts/application.html.erb (Duration: 6.4ms | Allocations: 2691)
Completed 200 OK in 8ms (Views: 7.7ms | ActiveRecord: 0.0ms | Allocations: 3901)


Started POST "/users/confirmation" for 127.0.0.1 at 2023-06-21 12:47:29 -0400
Processing by Devise::ConfirmationsController#create as TURBO_STREAM
  Parameters: {"authenticity_token"=>"[FILTERED]", "user"=>{"email"=>"giljr.2009@gmail.com"}, "commit"=>"Resend confirmation instructions"}
  User Load (0.3ms)  SELECT "users".* FROM "users" WHERE "users"."unconfirmed_email" = ? ORDER BY "users"."id" ASC LIMIT ?  [["unconfirmed_email", "giljr.2009@gmail.com"], ["LIMIT", 1]]
  User Load (0.2ms)  SELECT "users".* FROM "users" WHERE "users"."email" = ? ORDER BY "users"."id" ASC LIMIT ?  [["email", "giljr.2009@gmail.com"], ["LIMIT", 1]]
  Rendering /home/j3/.asdf/installs/ruby/3.0.2/lib/ruby/gems/3.0.0/gems/devise-4.9.2/app/views/devise/mailer/confirmation_instructions.html.erb
  Rendered /home/j3/.asdf/installs/ruby/3.0.2/lib/ruby/gems/3.0.0/gems/devise-4.9.2/app/views/devise/mailer/confirmation_instructions.html.erb (Duration: 1.1ms | Allocations: 513)
Devise::Mailer#confirmation_instructions: processed outbound mail in 7.2ms
Delivered mail 649329a118336_6d2842cc4943b@JAYTHREE.mail (7.5ms)
Date: Wed, 21 Jun 2023 12:47:29 -0400
From: please-change-me-at-config-initializers-devise@example.com
Reply-To: please-change-me-at-config-initializers-devise@example.com
To: giljr.2009@gmail.com
Message-ID: <649329a118336_6d2842cc4943b@JAYTHREE.mail>
Subject: Confirmation instructions
Mime-Version: 1.0
Content-Type: text/html;
 charset=UTF-8
Content-Transfer-Encoding: 7bit

<p>Welcome giljr.2009@gmail.com!</p>

<p>You can confirm your account email through the link below:</p>

<p><a href="http://localhost:3000/users/confirmation?confirmation_token=py7ssMJZs5QEcMPCGxHV">Confirm my account</a></p>

Redirected to http://127.0.0.1:3000/users/sign_in
Completed 303 See Other in 56ms (ActiveRecord: 0.5ms | Allocations: 50153)


Started GET "/users/sign_in" for 127.0.0.1 at 2023-06-21 12:47:29 -0400
Processing by Devise::SessionsController#new as TURBO_STREAM
  Rendering layout layouts/application.html.erb
  Rendering devise/sessions/new.html.erb within layouts/application
  Rendered devise/shared/_links.html.erb (Duration: 0.7ms | Allocations: 276)
  Rendered devise/sessions/new.html.erb within layouts/application (Duration: 5.0ms | Allocations: 2678)
  Rendered layouts/_navigation.html.erb (Duration: 0.0ms | Allocations: 9)
  Rendered layout layouts/application.html.erb (Duration: 6.1ms | Allocations: 3181)
Completed 200 OK in 8ms (Views: 7.7ms | ActiveRecord: 0.0ms | Allocations: 4858)
===============================================================================
IMAGE
===============================================================================
# Image Upload- Hossain Video 310
gem 'carrierwave'
gem 'mini_magick'
gem 'fog-aws'
===============================================================================
bundle install --without production
rails g scaffold Image name:string picture:string user:references
bundle install --without production
rails g scaffold Image name:string picture:string user:references
rails db:migrate
rails generate uploader Picture
rails db:migrate
rails s
===============================================================================
NEW # ACTION
===============================================================================
<%= form_for @image, :html => { multipart: true, :class => "form-horizontal image" } do |f| %>
  <% if @image.errors.any? %>
    <div id="error_expl" class="panel panel-danger">
      <div class="panel-heading">
        <h3 class="panel-title"><%= pluralize(@image.errors.count, "error") %> prohibited this image from being saved:</h3>
      </div>
      <div class="panel-body">
        <ul>
          <% @image.errors.full_messages.each do |msg| %>
            <li><%= msg %></li>
          <% end %>
        </ul>
      </div>
    </div>
  <% end %>
  <div class="control-group">
    <%= f.label :name, :class => 'control-label' %>
    <div class="controls">
      <%= f.text_field :name, :class => 'form-control' %>
    </div>
    <%= @image[:name] %>
  </div>
  <div class="control-group">
    <%= f.label :picture, :class => 'control-label' %>
    <div class="controls">
      <%= f.file_field :picture, accept: 'image/jpeg,image/gif,image/png' %>
    </div>
    <%= @image[:picture] %>
  </div>
  <%= f.submit nil, :class => 'btn btn-primary' %>
  <%= link_to t('.cancel', :default => t("helpers.links.cancel")),

images_path, :class => 'btn btn-default' %>
<% end %>

===============================================================================
IMAGES_CONTROLLER.rb
@image_user = current_user
===============================================================================
SHOW # ACTION
===============================================================================
<% if false %>
  <p style="color: green"><%= notice %></p>
  <%= render @image %>
  <div>
    <%= link_to "Edit this image", edit_image_path(@image) %> |
    <%= link_to "Back to images", images_path %>
    <%= button_to "Destroy this image", @image, method: :delete %>
  </div>
<% end %>
<%- model_class = Image -%>
<div class="page-header">
  <h1><%=t '.title', :default => model_class.model_name.human.titleize %></h1>
</div>
<dl class="dl-horizontal">
  <dt><strong><%= model_class.human_attribute_name(:name) %>:</strong></dt>
  <dd><%= @image.name %></dd>
  <dt></dt>
  <dd><%= image_tag(@image.picture.url, size: "100x100") if @image.picture? %></dd>
</dl>
<%= link_to t('.back', :default => t("helpers.links.back")),

images_path, :class => 'btn btn-default' %>
<%= link_to t('.edit', :default => t("helpers.links.edit")),

edit_image_path(@image), :class => 'btn btn-default' %>
<%= link_to t('.destroy', :default => t("helpers.links.destroy")),

image_path(@image),

:method => 'delete',

:data => { :confirm => t('.confirm', :default => t("helpers.links.confirm", :default => 'Are you sure?')) },

:class => 'btn btn-danger' %>
===============================================================================
ADD IMAGE VALIDATIONS
===============================================================================
UNCOMMENT uploaders/picture_uploader.rb
  def extension_allowlist
    %w(jpg jpeg gif png)
  end
===============================================================================
image.rb:
  def picture_size 
    if picture.size > 5.megabyte 
      errors.add(:picture, "Should be less than 5 MB")
    end
  end
===============================================================================
Go to _forms.html.erb
  <script type = "text/javascript">
    $('#image_picture').bind('change', function () {
      var size_in_megabytes = this.files[0].size/1024/1024;
      if (size_in_megabytes > 5){
        alert('Maximum file size is 5 MB.');
      }
    })
  </script>
===============================================================================
terminal type:
sudo apt-get install imagemagick --fix-missing
===============================================================================
index.html.erb:
<%- model_class = Image -%>
<div class="page-header">
  <h1><%=t '.title', :default => model_class.model_name.human.pluralize.titleize %></h1>
</div>
<table class="table table-striped">
  <thead>
    <tr>
      <th><%= model_class.human_attribute_name(:name) %></th>
      <th><%= model_class.human_attribute_name(:picture) %></th>
      <th><%=t '.actions', :default => t("helpers.actions") %></th>
    </tr>
  </thead>
  <tbody>
    <% @images.each do |image| %>
      <tr>
        <td><%= link_to image.name, image_path(image) %></td>
        <td><%= image_tag image.picture.url, size: "100x100" %></td>
        <td>
          <%= link_to t('.edit', :default => t("helpers.links.edit")),

edit_image_path(image), :class => 'btn btn-default btn-xs' %>
          <%= link_to t('.destroy', :default => t("helpers.links.destroy")),

image_path(image),

:method => :delete,

:data => { :confirm => t('.confirm', :default => t("helpers.links.confirm", :default => 'Are you sure?')) },

:class => 'btn btn-xs btn-danger' %>
        </td>
      </tr>
    <% end %>
  </tbody>
</table>
<%= link_to t('.new', :default => t("helpers.links.new")),

new_image_path,

:class => 'btn btn-primary' %>
===============================================================================
run server
===============================================================================
===============================================================================
===============================================================================